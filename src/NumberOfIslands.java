import java.util.LinkedList;
import java.util.Queue;

public class NumberOfIslands {
    private class Point {
        int x, y;

        Point(int x, int y) {
            this.x = x;
            this.y = y;
        }
    }

    public int numIslands(char[][] grid) {
        if (grid == null || grid.length == 0) return 0;
        int cnt = 0, n = grid.length, m = grid[0].length;
        char[][] temp = new char[n + 2][m + 2];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                temp[i + 1][j + 1] = grid[i][j];
            }
        }
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= m; j++) {
                if (temp[i][j] == '1') {
                    cnt += 1;
                    paintIsland(temp, i, j);
                }
            }
        }
        return cnt;
    }

    public void paintIsland(char[][] grid, int s, int e) {
        Queue<Point> map = new LinkedList<>();
        grid[s][e] = '0';
        map.offer(new Point(s, e));
        while (!map.isEmpty()) {
            Point p = map.poll();
            if (grid[p.x - 1][p.y] == '1') {
                grid[p.x - 1][p.y] = '0';
                map.offer(new Point(p.x - 1, p.y));
            }
            if (grid[p.x][p.y - 1] == '1') {
                grid[p.x][p.y - 1] = '0';
                map.offer(new Point(p.x, p.y - 1));
            }
            if (grid[p.x + 1][p.y] == '1') {
                grid[p.x + 1][p.y] = '0';
                map.offer(new Point(p.x + 1, p.y));
            }
            if (grid[p.x][p.y + 1] == '1') {
                grid[p.x][p.y + 1] = '0';
                map.offer(new Point(p.x, p.y + 1));
            }
        }
    }

    public static void main(String[] args) {
        System.out.println(new NumberOfIslands().numIslands(new char[][]{{'1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','0','1','0','1','1'},{'0','1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','0'},{'1','0','1','1','1','0','0','1','1','0','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','0','1','1','1','1','1','1','0','1','1','1','0','1','1','1','0','1','1','1'},{'0','1','1','1','1','1','1','1','1','1','1','1','0','1','1','0','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','0','1','1'},{'1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'0','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','0','1','1','1','1','1','1','1','0','1','1','1','1','1','1'},{'1','0','1','1','1','1','1','0','1','1','1','0','1','1','1','1','0','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','0'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','0','0'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'}}));
    }
}
